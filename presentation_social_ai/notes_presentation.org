#+title: Presentation Notes


* Questions for baris
- how many datasets was this filter used on
- how many cars were tested

- acceleration equivalence (axis called differently)
- video of filtering (left unfiltered  ,right filtered)



* Script


** Previous integration model

- used ballistic integration in the previous implementation
- show formula
- look somewhat familiar from numerical programming
- what we are doing is
- calculate next timestep using current timestep
- we are working with discrete time (so not t but k)
- For neural network we rearrange the formula for a(k)
- problem: not the same result!
- Big discretization error over time!

** Our approach
- in a nutshell we want to try to find a more accurate integration formula
- this took most of our time (funny that it is now just one click)
- here is what we did,
- using a linear model for the distance and velocity
- some constants c_1 to c_4

- now we just rearrange this for the acceleration
- constants are renamed
- but how do we solve for the constants?
- imagine this as in matrix form
- think most people will know where this is going
- linear model which can be solved using linear regression

Quite straight forward isnt it
Now to our results

** Results
*** Scenario Filtering
- Will start with the scenario filtering process
- Have x amount of different behaviours which now can be automatically detected
- show video
- here we have a side by side view of a portion of our dataset visualized
- on the left we have the unfiltered dataset
- on the right we have the filtered dataset
- here we have an exiting scenario
  (This was done on x datasets)

- Now we will take a look at the results of our integration model

*** Integration Method
- Jus as a reminder
- Linear regression model tried to approximate the accerleration of a car
- result of the regression can be seen here
- x-axis ground truth data of acceleration
- y-axis predicted data of acceleration using the coefficients
- our goal was that both our accelerations to match each other
- and we managed to do that
- this the graph for the formula from the velocity
- seem pretty similar rigth?
- just for comparison
- equivalence graph of ballistic integration
- and this is ours
- looking at the mse

- ofc visualized our results!
- left: ground truth
- right: predicted car
- matches up quite nicely
- but at end on sidewalk (in depth analysis in the report)


*** Summary
- filtering mech
- integration method with matching accelerations
- visualized car

** Future work
- more scnearios
- use other datsets

- finetune model for better accuracy
- test model with the neural network
- task for the next team








* Gpt prompts



User
I am doing a presentation in latex beamer. Improve these notes and make keywords for the latex beamer slide:
Future work (Alfred if not enough)
- specifying even more scenarios
- testing other datasets 
- finetuning the integration model
- test the integration model with the neural network (task for the next team)




Certainly! Here's a refined version of your notes with keywords for a LaTeX Beamer slide:

Slide Title: Future Work

Notes:

    Expand scenario specifications to encompass a broader range of use cases.
    Explore alternative datasets to enhance the model's versatility and robustness.
    Refine the integration model through further fine-tuning for improved performance.
    Assign the task of evaluating the integration model alongside neural networks to the next team for comprehensive analysis.

Keywords for LaTeX Beamer Slide:

    Scenario Specification Expansion
    Dataset Exploration
    Integration Model Refinement
    Neural Network Integration Evaluation

* Structure
** Motivation and problem statement
Premise:
- autonomous driving promises safer and more efficient transportation.
- understanding human-driven vehicle motion behaviors is crucial for ensuring the safety of autonomous driving.
- premise is, car interacting with other cars as this is a human driving a car
- when driving alone on a street you drive differently as when other cars are present
- some trajectories may be physically possible but socially unacceptable.
- human drivers adhere to social norms, such as yielding right-of-way or respecting pedestrians.
- thus, we introduce virtual forces between the cars to enhance prediction of movement
- A neural network will try to modulate these forces and will enable us to predict the car movements in higher accuracy by including the interaction of a car with other cars surrounding it

Our task:
Baris
- analysing the forces between cars in different scenarios (lane merging, ...)
-> get the dataset and filter it out by the different scenarios

Alfred
- neural network has problems using the current integration methods
- big dicretization and other errors because we are working with data points (not continuous graph)
-> find a more accurate discrete integration model that predicts the movement of the car better

Graphics:
Cool picture from Di Lius presentation
Picture of a car with two paths (one physically possible, one socially accepted)
Table of the tasks of what Baris/Alfreds tasks are

** Detailed description of the implemented method
*** Data Collection:
Content:
Describe the dataset used for the analysis
- How where they taken
- How many data points
- What scenarios
- Show the dataset as video

Graphics:
Picture of the rwth aach github repo, and dataset maybe
Show a video of the moving cars

*** Baris' part
Content:
What did you use
What measures did you take for the scenarios
How many datapoints did you run through

Graphics:
- an overview of the parameters of how you filtered the data??

*** Alfreds part
Content:
How does the model look like?
- explain that data is discrete and we need to find a method to integrate discrete datapoints
- now we ant to use a linear model for the prediction
- have to equlize the accerleration for the neural network
- tested 10 different model and got the following
- solved this by using linear regression (using python, numpy and pandas)

Graphics:
- Show ballistic integration
- Show 10 models we tried (focus the one we used)

** Results
Evaluation:
Successes/Problems of filtering out scenarios
- Successfully filtered X datapoints and Y different scenarios

Successes/Problems of prediciting car movement
- after playing around with some parameters and databatch sizes
- Acceleration and Velocity are more accurate than ballistic integration
- Distance measure is bad (finetune the model)

Out of curiosity we tried to train a model on the scnearios (this would be done by the neural network)
- bad results (bc linear model)

Graphics:
- what for filtering part?
- vdieos of two selected cars in specific scenarios

- show the graphs for the velocity and the distance of the models
- comparison that to the ballistic integration


** Future work
Getting even more scenarios?
Trying out different models for the movement prediction (finetune model, add more parameters)
Analyzing the results even furhter (outliers, distance measure)

Actually testing it with the neural network
Feeding results into the neural network

Graphics:
Table/List of what to do


* Todo
For baris:
Graphics for introducion
- that one picture from Di Lius presentation
- picture of a car with two paths (one physically possible, one socially accepted)
- table of the tasks of what Baris/Alfreds tasks are
- Picture of the rwth aach github repo, and dataset maybe
- video of the moving cars of dataset (to showcase dataset)
- video of moving cars in some scenarios
- an overview of the parameters of how you filtered the data??

For me:
- formulas for ballistic integration
  - accerleration 4 paramters
  - accerleration 7 paramters
  - simple distance
  - simple velocity
  - accleration modeo 6 + 3
  - accleration modeo 6 + 3
- formulas for 10 models we tried (focus the one we used)

- what for filtering part?

- show the graphs for the velocity and the distance of the models
- graph of ballistic integration

- video of the predicted movement of a selected car
